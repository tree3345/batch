import com.alibaba.fastjson.JSON;
import junitx.framework.Assert;
import org.junit.Test;
import org.quartz.*;
import org.springframework.expression.ExpressionParser;
import org.springframework.expression.spel.standard.SpelExpressionParser;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * Created by liudh on 2015/11/14
 */
public class DateTest {
    @Test
    public void testDate() {
//
      String codes ="000338.SZ,600216.SH,600839.SH,002122.SZ,000876.SZ,601988.SH,600098.SH,600685.SH,000898.SZ,600548.SH,000680.SZ,601618.SH,600011.SH,601106.SH,002415.SZ,600369.SH,600183.SH,600823.SH,002073.SZ,600648.SH,000829.SZ,601928.SH,600079.SH,600660.SH,600519.SH,000631.SZ,601566.SH,600006.SH,601018.SH,002385.SZ,600348.SH,000100.SZ,002028.SZ,600637.SH,000800.SZ,601898.SH,600058.SH,300058.SZ,600500.SH,000612.SZ,601390.SH,300251.SZ,601001.SH,002310.SZ,600320.SH,000061.SZ,600166.SH,600809.SH,600611.SH,000778.SZ,601857.SH,600036.SH,601258.SH,002673.SZ,600481.SH,000562.SZ,601328.SH,600971.SH,002275.SZ,600308.SH,000031.SZ,600153.SH,600782.SH,000999.SZ,601216.SH,002500.SZ,600426.SH,000536.SZ,600893.SH,002241.SZ,600277.SH,000009.SZ,600125.SH,600748.SH,000963.SZ,600596.SH,000755.SZ,601788.SH,600028.SH,601166.SH,002465.SZ,600398.SH,000425.SZ,600251.SH,600879.SH,002155.SZ,600267.SH,603699.SH,600111.SH,600718.SH,000937.SZ,600583.SH,000718.SZ,601699.SH,600021.SH,000401.SZ,600220.SH,600863.SH,002129.SZ,000883.SZ,601991.SH,600102.SH,600690.SH,000912.SZ,600550.SH,000686.SZ,601633.SH,600016.SH,601111.SH,002422.SZ,600373.SH,600196.SH,600832.SH,002092.SZ,600653.SH,000839.SZ,601933.SH,600087.SH,600664.SH,600535.SH,000652.SZ,601600.SH,600008.SH,601098.SH,002400.SZ,600352.SH,000157.SZ,600812.SH,002051.SZ,600639.SH,000822.SZ,601901.SH,600062.SH,600516.SH,000625.SZ,601519.SH,600001.SH,601005.SH,002353.SZ,600331.SH,000069.SZ,600170.SH,600631.SH,000783.SZ,601872.SH,600038.SH,300017.SZ,600489.SH,000581.SZ,601336.SH,300124.SZ,600997.SH,002294.SZ,600312.SH,000046.SZ,600158.SH,600795.SH,002007.SZ,000767.SZ,601801.SH,600030.SH,601231.SH,002594.SZ,600432.SH,000539.SZ,601288.SH,600900.SH,002244.SZ,600299.SH,000021.SZ,600143.SH,600770.SH,000969.SZ,600598.SH,601169.SH,002475.SZ,600406.SH,000503.SZ,600256.SH,600881.SH,002202.SZ,600270.SH,600117.SH,600739.SH,000959.SZ,600588.SH,000728.SZ,601718.SH,600023.SH,002431.SZ,600380.SH,000413.SZ,600236.SH,600873.SH,002146.SZ,601998.SH,600108.SH,600703.SH,000927.SZ,600570.SH,000703.SZ,601668.SH,600018.SH,601118.SH,600210.SH,600837.SH,002106.SZ,000869.SZ,601958.SH,600096.SH,600675.SH,000897.SZ,600547.SH,000667.SZ,601607.SH,600010.SH,601101.SH,002410.SZ,600362.SH,000333.SZ,600820.SH,002069.SZ,600643.SH,000826.SZ,601919.SH,600068.SH,600657.SH,600518.SH,000630.SZ,601558.SH,600005.SH,601009.SH,002378.SZ,600340.SH,000089.SZ,600177.SH,600635.SH,000793.SZ,601888.SH,600050.SH,300027.SZ,600498.SH,000598.SZ,601377.SH,300146.SZ,600999.SH,002304.SZ,600316.SH,000060.SZ,600161.SH,600808.SH,002024.SZ,600601.SH,000776.SZ,601818.SH,600033.SH,601238.SH,002653.SZ,600456.SH,000559.SZ,601318.SH,600970.SH,002269.SZ,600307.SH,000027.SZ,600151.SH,600780.SH,000983.SZ,601186.SH,002498.SZ,600418.SH,000528.SZ,600887.SH,002236.SZ,600276.SH,000002.SZ,600123.SH,600747.SH,000961.SZ,600595.SH,000750.SZ,601766.SH,600027.SH,601158.SH,002456.SZ,600395.SH,000423.SZ,600246.SH,600875.SH,002153.SZ,600266.SH,603288.SH,600110.SH,600717.SH,000933.SZ,600582.SH,000717.SZ,601688.SH,600020.SH,000400.SZ,600219.SH,600859.SH,002128.SZ,000878.SZ,601989.SH,600100.SH,600688.SH,000900.SZ,600549.SH,000685.SZ,601628.SH,600015.SH,601107.SH,002416.SZ,600372.SH,600188.SH,600827.SH,002081.SZ,600649.SH,000831.SZ,601929.SH,600085.SH,600663.SH,600528.SH,000651.SZ,601588.SH,600007.SH,601088.SH,002399.SZ,600350.SH,000156.SZ,002038.SZ,600638.SH,000807.SZ,601899.SH,600060.SH,600508.SH,000623.SZ,601398.SH,600000.SH,601003.SH,002344.SZ,600325.SH,000063.SZ,600169.SH,600811.SH,600616.SH,000780.SZ,601866.SH,600037.SH,601268.SH,300015.SZ,600485.SH,000568.SZ,601333.SH,300070.SZ,600978.SH,002292.SZ,600309.SH,000039.SZ,600157.SH,600783.SH,002001.SZ,600029.SH,601225.SH,002570.SZ,600428.SH,000538.SZ,600895.SH,002242.SZ,600282.SH,000012.SZ,600132.SH,600761.SH,000968.SZ,600597.SH,000758.SZ,601800.SH,601168.SH,002470.SZ,600403.SH,000488.SZ,600252.SH,600880.SH,002194.SZ,600269.SH,603993.SH,600115.SH,600737.SH,000951.SZ,600585.SH,000725.SZ,601717.SH,600022.SH,600376.SH,000402.SZ,600221.SH,600867.SH,002142.SZ,601992.SH,600104.SH,600694.SH,000917.SZ,600569.SH,000690.SZ,601666.SH,600017.SH,601117.SH,002429.SZ,600208.SH,600835.SH,002097.SZ,600655.SH,000858.SZ,601939.SH,600089.SH,600674.SH,000895.SZ,600546.SH,000656.SZ,601601.SH,600009.SH,601099.SH,002405.SZ,600357.SH,000301.SZ,600816.SH,002065.SZ,600642.SH,000825.SZ,601918.SH,600066.SH,600517.SH,000629.SZ,601555.SH,600004.SH,601006.SH,002375.SZ,600332.SH,000088.SZ,600176.SH,600633.SH,000792.SZ,601877.SH,600048.SH,300024.SZ,600497.SH,000596.SZ,601369.SH,300133.SZ,600998.SH,002299.SZ,600315.SH,000059.SZ,600160.SH,600804.SH,002008.SZ,000768.SZ,601808.SH,600031.SH,601233.SH,002603.SZ,600436.SH,000543.SZ,601299.SH,600961.SH,002252.SZ,600300.SH,000024.SZ,600150.SH,600779.SH,000970.SZ,600600.SH,601179.SH,002493.SZ,600415.SH,000527.SZ,600259.SH,600886.SH,002230.SZ,600271.SH,000001.SZ,600118.SH,600741.SH,000960.SZ,600591.SH,000729.SZ,601727.SH,600026.SH,002450.SZ,600383.SH,000422.SZ,600239.SH,600874.SH,002152.SZ,603000.SH,600109.SH,600705.SH,000932.SZ,600578.SH,000709.SZ,601669.SH,600019.SH,601139.SH";
        String values =
                "0.2690,0.1400,0.1590,0.1000,0.0940,0.6040,0.1020,0.0910,0.4130,0.0420,0.1940,0.3100,0.5780,0.2900,0.0800,0.1300,0.1090,0.0900,0.2700,0.0200,0.0740,0.1400,0.2300,0.1940,1.1710,0.0600,0.0900,0.0890,0.1400,0.0600,0.2550,0.2010,0.1200,0.1700,0.2710,0.4480,0.2250,0.1500,0.2010,0.1020,0.7670,0.1100,0.1660,0.1000,0.4400,0.1170,0.2200,0.0590,0.1510,0.1420,1.2130,3.6410,0.0700,0.0700,0.1200,0.2900,2.6930,0.1000,0.0200,0.0880,0.1790,0.2120,0.0700,0.1200,0.0400,0.0800,0.1160,0.0600,0.0900,0.2500,0.0500,0.2170,0.1430,0.1380,0.2100,0.2180,0.0770,0.2500,0.9960,2.1380,0.2200,0.1100,0.2780,0.1350,0.1460,0.1060,0.1700,0.0600,0.2450,0.1000,0.2380,0.3840,0.1140,0.3290,0.0770,0.1820,0.1990,0.0700,0.1300,0.0200,0.1310,0.0660,0.2160,0.0850,0.5300,0.1600,0.1400,2.5700,0.2840,0.2000,0.0800,0.2750,0.4160,0.1500,0.1490,0.3300,0.0700,0.1290,0.2060,0.1900,0.2010,0.5460,0.1500,0.0900,0.2300,0.1300,0.4340,0.2130,0.1100,0.0880,0.1070,0.1800,0.1880,0.0900,0.1370,0.0400,0.2300,0.0470,0.1700,0.2350,0.4690,0.1230,0.1950,0.1440,0.2100,0.0800,0.1300,0.2830,0.2400,0.1100,0.1600,0.1780,0.0900,0.1300,0.1300,0.1590,0.4700,0.1800,0.0550,0.0200,3.1700,0.0800,0.0400,0.1090,0.1450,0.6100,1.4410,0.0900,0.1000,0.0920,0.1610,0.0990,0.1300,0.2530,1.3940,0.2000,0.4100,0.1050,0.1690,0.3270,0.1060,0.0810,0.0850,0.5980,0.1260,0.1170,0.0590,0.0900,0.0700,0.0700,0.0740,0.1100,0.1290,0.0800,0.0400,0.2960,0.1810,0.2300,0.0650,0.3200,0.1000,0.5000,0.6580,0.1700,0.1170,0.0890,0.2000,0.1800,0.3440,0.2100,0.2250,0.1710,0.3790,0.1260,0.2900,0.2490,0.1200,0.2000,0.2070,0.5700,0.1640,0.0900,0.1660,0.2600,0.7250,0.2430,0.0900,0.2000,0.2380,0.0900,0.6460,0.4480,0.0400,0.1700,0.1190,0.3050,0.3460,0.0980,0.1200,1.2960,0.2700,0.1200,0.2000,0.1300,0.0800,0.3500,0.1600,0.0790,0.3220,0.1200,0.2640,0.8920,0.1730,0.0900,0.1800,0.0960,0.0300,0.0800,0.1170,0.0710,2.9700,0.1000,0.0700,0.0780,0.2100,0.0760,0.0690,0.5870,0.7920,0.0500,0.0890,0.1180,0.2630,0.2500,0.2100,2.1890,0.2230,0.0860,0.0700,0.0780,0.1300,0.4200,0.1240,0.1400,0.1700,0.1800,0.1920,0.0900,0.2860,0.1000,0.1330,0.0700,0.1040,0.2750,0.2150,0.1100,0.1290,0.1700,0.0780,0.2400,0.1390,0.1310,0.0760,0.3560,0.3600,0.2800,0.1710,0.1180,0.1040,0.0900,0.9250,0.5640,0.0600,0.0600,0.1300,0.2110,0.2700,0.2600,0.3400,0.2100,0.2000,0.1130,0.2780,0.2140,0.6100,0.2040,0.0500,1.9260,0.2000,0.0940,0.0400,0.1000,0.1570,0.1300,0.6180,0.2100,0.1080,0.5270,1.5830,2.3050,0.0680,0.0700,0.2920,0.6410,0.1000,0.2280,0.0840,0.1100,0.2670,0.1790,0.0800,0.0900,0.0700,0.3970,0.3380,0.2200,0.0690,0.1400,0.3700,0.1940,0.1600,0.0800,0.1120,0.2880,0.0400,0.0400,0.1740,0.2080,0.3650,0.0800,0.0740,0.1840,0.1650,0.0720,0.1230,0.0530,0.1250,0.1100,0.4120,0.0800,0.0800,0.1830,0.1400,0.1600,0.0500,0.1530,0.0300,0.1020,0.1760,0.1020,0.4960,0.0750,0.0900,0.1370,0.0590,0.4990,0.0870,0.1900,0.3270,0.1100,0.3420,0.2040,0.1530,0.1000,0.1670,0.3030,0.0810,0.0900,0.1000,0.1770,0.1270,0.0930,0.2520,0.8080,1.0370,0.7120,0.1850,0.2600,0.1400,0.0600,0.6790,0.3700,0.0900,0.0800,0.1250,0.1120,0.1100,0.2300,0.3220,0.4480,0.1110,0.1250,0.1200,0.6160,0.1100,0.1130,0.9750,0.1200,0.4100,0.0950,0.0700,0.0600,0.7170,0.0400,0.5880,0.2500,0.1900,0.0700,0.0900,0.0800,0.0600,0.1100,0.2900,0.0800,0.1600,0.1220,0.2900,0.2730,0.2330,0.3870,0.0800,0.0600,0.2200,0.0660,0.3800,0.0580,0.1500,0.1100,0.4090,0.2090,0.1290,0.2500,0.1470,0.1400,0.1200,0.2620,0.2760,0.1400,0.1730,0.3000,0.1680,1.3420,0.0900,0.2180,0.1620,0.0710,0.1700,0.1300,0.2010,0.3200,0.5010,0.1980,0.1200,0.0570,0.0940,0.1200,0.1000,0.2500,0.1800,0.1000,0.2790,0.2900,0.8170,0.0600";
        System.out.println(codes.split(",").length);
        System.out.println(values.split(",").length);
    }
    @Test
    public void testConstructorExpression() {
        ExpressionParser parser = new SpelExpressionParser();

        String result2 = parser.parseExpression("#{T(com.lzjf.util.DateUtils).dateFormat(-1)}").getValue(String.class);
        System.out.println(result2);
        Assert.assertNotNull(result2);
    }

    class JobExecutionContextimplaa implements JobExecutionContext{
        @Override
        public Scheduler getScheduler() {
            return null;
        }

        @Override
        public Trigger getTrigger() {
            return null;
        }

        @Override
        public org.quartz.Calendar getCalendar() {
            return null;
        }

        @Override
        public boolean isRecovering() {
            return false;
        }

        @Override
        public TriggerKey getRecoveringTriggerKey() throws IllegalStateException {
            return null;
        }

        @Override
        public int getRefireCount() {
            return 0;
        }

        @Override
        public JobDataMap getMergedJobDataMap() {
            return null;
        }

        @Override
        public JobDetail getJobDetail() {
            return null;
        }

        @Override
        public Job getJobInstance() {
            return null;
        }

        @Override
        public Date getFireTime() {
            return null;
        }

        @Override
        public Date getScheduledFireTime() {
            return null;
        }

        @Override
        public Date getPreviousFireTime() {
            return null;
        }

        @Override
        public Date getNextFireTime() {
            return null;
        }

        @Override
        public String getFireInstanceId() {
            return null;
        }

        @Override
        public Object getResult() {
            return null;
        }

        @Override
        public void setResult(Object o) {

        }

        @Override
        public long getJobRunTime() {
            return 0;
        }

        @Override
        public void put(Object o, Object o1) {

        }

        @Override
        public Object get(Object o) {
            return null;
        }
    }
}
